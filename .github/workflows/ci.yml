name: Continuous Integration

# This workflow runs on pushes to the main branch and on pull requests targeting main.
on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build-and-test:
    # Use the latest version of Ubuntu for the runner environment
    runs-on: ubuntu-latest

    steps:
      # Step 1: Check out the repository's code so the workflow can access it
      - name: Checkout repository
        uses: actions/checkout@v4

      # Step 2: Set up a specific version of Node.js
      # This also configures caching for npm dependencies to speed up subsequent runs
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.x' # Use a recent LTS version
          cache: 'npm'

      # Step 3: Install project dependencies using 'npm ci'
      # 'npm ci' is recommended for CI environments as it provides faster, more reliable builds
      - name: Install dependencies
        run: npm ci

      # Step 4: Compile the Solidity contracts
      # This step verifies that the contracts compile without errors and generates TypeChain artifacts
      - name: Compile contracts
        run: npx hardhat compile

      # Step 5: Run the full test suite
      # This is the most critical step. If any test fails, the workflow will fail.
      - name: Run tests
        run: npx hardhat test

      # (Optional but Recommended) Step 6: Run Linter
      # You can add a linting step here. First, add a 'lint' script to your package.json
      # e.g., "lint": "solhint 'contracts/**/*.sol'"
      # - name: Lint Solidity code
      #   run: npm run lint